workflow:
  # https://docs.gitlab.com/ee/ci/yaml/#workflowrules
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH

variables:
  GIT_SUBMODULE_STRATEGY: recursive

.build:
  stage: build
  image: node:lts
  cache:
    key:
      files:
        - yarn.lock
    paths:
      - .yarn-cache/
  variables:
    NODE_OPTIONS: "--max-old-space-size=4096"
  before_script:
    - echo 'yarn-offline-mirror ".yarn-cache/"' >> .yarnrc
    - echo 'yarn-offline-mirror-pruning true' >> .yarnrc
    - yarn install --frozen-lockfile --no-progress
    - npm --no-git-tag-version version $(git describe)

lint:
  extends: .build
  script:
    - yarn lint

build:
  extends: .build
  script:
    - yarn build
  artifacts:
    paths:
      - dist/

.envsubst:
  stage: build
  image: alpine:latest
  needs:
    - build
  before_script:
    - apk add gettext
  script:
    - envsubst < dist/assets/env.template.js > dist/assets/env.js
    - cat dist/assets/env.js
  artifacts:
    paths:
      - dist/

.deploy:
  stage: deploy
  image: alpine:latest
  script:
    - apk add openssh-client rsync
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh && chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - rsync -avz -e 'ssh -p2201' --delete dist/ $SFTP_SERVER

build:development:
  extends: .envsubst
  variables:
    API_BASE_URL: "https://admin.avalanche.report/albina_dev/api/"
    WS_BASE_URL: "wss://socket.avalanche.report/albina_dev/"
    TEXTCAT_URL: "https://admin.avalanche.report/textcat-ng-dev/"
    HEADER_BG_COLOR: "#f4ea12"
    FAVICON_PATH: "assets/img/admin-favicon-dev.ico"
    LOGO_PATH: "assets/img/admin-logo-dev.svg"
  environment:
    name: dev

deploy:development:
  extends: .deploy
  needs:
    - build:development
  environment:
    name: dev
  rules:
    - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"
    - when: manual

build:beta:
  extends: .envsubst
  variables:
    API_BASE_URL: "https://admin.avalanche.report/albina/api/"
    WS_BASE_URL: "wss://socket.avalanche.report/albina/"
    TEXTCAT_URL: "https://admin.avalanche.report/textcat-ng/"
    HEADER_BG_COLOR: "#839194"
    FAVICON_PATH: "assets/img/admin-favicon-beta.ico"
    LOGO_PATH: "assets/img/admin-logo-beta.svg"
  environment:
    name: beta

deploy:beta:
  extends: .deploy
  needs:
    - build:beta
  environment:
    name: beta
  rules:
    - when: manual

build:production:
  extends: .envsubst
  variables:
    API_BASE_URL: "https://admin.avalanche.report/albina/api/"
    WS_BASE_URL: "wss://socket.avalanche.report/albina/"
    TEXTCAT_URL: "https://admin.avalanche.report/textcat-ng/"
    HEADER_BG_COLOR: "#ffffff"
    FAVICON_PATH: "assets/img/admin-favicon.ico"
    LOGO_PATH: "assets/img/admin-logo.svg"
  environment:
    name: production

deploy:production:
  extends: .deploy
  needs:
    - build:production
  environment:
    name: production
  rules:
    - if: "$CI_COMMIT_TAG"
      when: manual

build:aran:
  extends: .envsubst
  environment:
    name: aran
  variables:
    API_BASE_URL: "https://api.lauegi.report/api/"
    WS_BASE_URL: "wss://socket.avalanche.report/albina/"
    TEXTCAT_URL: "https://admin.lauegi.report/textcat-ng/"
    HEADER_BG_COLOR: "#ffffff"

build:docker:
  extends: .envsubst
  environment:
    name: docker

docker-build:
  stage: build
  needs:
    - build:docker
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA --insecure-registry=$CI_REGISTRY --insecure
  rules:
    - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"
    - when: manual
